#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è –∫–ª–∏–∫–µ—Ä–∞ –Ω–∞ VPS —Å –ø–æ–º–æ—â—å—é Docker
# –î–ª—è Ubuntu 24.04 LTS

echo "üê≥ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∫–ª–∏–∫–µ—Ä–∞ –Ω–∞ VPS —Å Docker..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ Ubuntu
if [ ! -f /etc/os-release ] || ! grep -q "Ubuntu" /etc/os-release; then
    echo "‚ö†Ô∏è  –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è Ubuntu. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N)"
    read -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker &> /dev/null; then
    echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏
    apt remove -y docker docker-engine docker.io containerd runc 2>/dev/null || true
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    apt install -y ca-certificates curl gnupg lsb-release
    
    # –î–æ–±–∞–≤–ª—è–µ–º GPG –∫–ª—é—á Docker
    mkdir -p /etc/apt/keyrings
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
    apt update
    apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Docker
    systemctl start docker
    systemctl enable docker
    
    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v docker-compose &> /dev/null; then
    echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
    curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    chmod +x /usr/local/bin/docker-compose
    echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚úÖ Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR="/opt/clicker"
echo "üìÅ –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞: $PROJECT_DIR"
mkdir -p $PROJECT_DIR

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ PROJECT_DIR
if [ -f "docker-compose.yml" ]; then
    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞..."
    cp -r * $PROJECT_DIR/ 2>/dev/null || true
    cd $PROJECT_DIR
else
    echo "‚ùå –§–∞–π–ª docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chown -R root:root $PROJECT_DIR
chmod +x $PROJECT_DIR/docker-deploy.sh 2>/dev/null || true

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall
echo "üîí –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
if command -v ufw &> /dev/null; then
    ufw allow 22/tcp
    ufw allow 80/tcp
    ufw allow 443/tcp
    ufw allow 8080/tcp  # –ù–æ–≤—ã–π –ø–æ—Ä—Ç –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    ufw allow 8443/tcp  # –ù–æ–≤—ã–π –ø–æ—Ä—Ç –¥–ª—è HTTPS
    ufw --force enable
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down 2>/dev/null || docker compose down 2>/dev/null || true

# –°–æ–±–∏—Ä–∞–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üî® –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã..."
docker-compose build --no-cache || docker compose build --no-cache

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose up -d || docker compose up -d

# –°–æ–∑–¥–∞—ë–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
echo "‚öôÔ∏è –°–æ–∑–¥–∞—ë–º systemd —Å–µ—Ä–≤–∏—Å..."
cat > /etc/systemd/system/clicker-docker.service << EOF
[Unit]
Description=Clicker Docker Service
Requires=docker.service
After=docker.service

[Service]
Type=oneshot
RemainAfterExit=yes
WorkingDirectory=$PROJECT_DIR
ExecStart=/usr/local/bin/docker-compose up -d
ExecStop=/usr/local/bin/docker-compose down
TimeoutStartSec=0

[Install]
WantedBy=multi-user.target
EOF

# –í–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
systemctl daemon-reload
systemctl enable clicker-docker

# –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker-compose ps || docker compose ps

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å..."

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(curl -s http://checkip.amazonaws.com/ || curl -s http://ipinfo.io/ip)

if curl -f http://localhost:8080/api/counter &>/dev/null; then
    echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

if curl -f http://localhost:8080/ &>/dev/null; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""
echo "üéâ –†–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìç –í–∞—à –∫–ª–∏–∫–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:"
if [ ! -z "$SERVER_IP" ]; then
    echo "   üåê http://$SERVER_IP:8080"
fi
echo "   üåê http://77.222.42.53:8080"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –õ–æ–≥–∏: cd $PROJECT_DIR && docker-compose logs -f"
echo "   –°—Ç–∞—Ç—É—Å: cd $PROJECT_DIR && docker-compose ps"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: systemctl restart clicker-docker"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞: cd $PROJECT_DIR && docker-compose down"
echo ""
echo "üéØ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∫–ª–∏–∫–µ—Ä –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!" 